jobs:
  - job: MacOS
    pool:
      vmImage: macOS-10.14
    steps:
      - template: darwin/continuous-build-darwin.yml

  - job: Windows
    pool:
      vmImage: vs2017-win2016
    steps:
      - template: win32/continuous-build-win32.yml

  - job: Linux
    pool:
      vmImage: ubuntu-16.04
    steps:
      - template: linux/continuous-build-linux.yml
  
  - job: LegalStatusPolicyCheck
    pool:
      vmImage: ubuntu-16.04
    steps:
      - template: policy/continuous-legal-status-policy-check.yml

  - job: PublishStandaloneBinariesForWin32
    dependsOn:
      - MacOS
      - Windows
      - Linux
    pool:
      vmImage: windows-2019
    steps:
      - template: standalone-binaries/continuous-build-standalone-binaries-win32.yml
    condition: and(succeeded('Windows'), succeeded('Linux'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

  - job: PublishDropFile
    dependsOn:
      - MacOS
      - Windows
      - Linux
    condition: and(succeeded('Windows'), succeeded('Linux'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    pool:
      vmImage: "ubuntu-16.04"

    steps:
      - task: UsePythonVersion@0
        displayName: "Use Python 3.7"
        inputs:
          versionSpec: 3.7
          addToPath: true
          architecture: "x64"

      - powershell: |
          echo $(BUILD.SOURCEBRANCH)
          if ("$(BUILD.SOURCEBRANCH)" -match "^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$") { ((Get-Content -path "$(BUILD.REPOSITORY.LOCALPATH)\iotedgehubdev\__init__.py" -Raw) -replace "__AIkey__ = '.*'","__AIkey__ = '$(AI_KEY)'") | Set-Content -Path "$(BUILD.REPOSITORY.LOCALPATH)\iotedgehubdev\__init__.py" }
        displayName: "Replace AI Key for PROD"

      - script: |
          pip install --upgrade setuptools
          pip install --upgrade wheel
          pushd $(BUILD.REPOSITORY.LOCALPATH)
          python setup.py bdist_wheel
          popd
        displayName: "Build drop file"

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(BUILD.REPOSITORY.LOCALPATH)/dist
          TargetFolder: $(Build.ArtifactStagingDirectory)
        displayName: "Copy Files to: build artifact staging directory"

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: build-artifact-drop
